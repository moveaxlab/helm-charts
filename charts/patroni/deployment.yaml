---
# Source: patroni/templates/serviceaccount-patroni.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deploy-patroni
  labels:
    app: deploy-patroni
    chart: patroni-0.16.3
    release: deploy
    heritage: Helm
---
# Source: patroni/templates/sec-patroni.yaml
apiVersion: v1
kind: Secret
metadata:
  name: deploy-patroni
  labels:
    app: deploy-patroni
    chart: patroni-0.16.3
    release: deploy
    heritage: Helm
type: Opaque
data:
  password-superuser: dGVh
  password-admin: Y29sYQ==
  password-standby: cGluYWNvbGFkYQ==
  aws_access_key_id: QUtJQTJIWVNJSE5FTUtWTzNCWFA=
  aws_secret_access_key: QWtTdlFVSnl2SE9pUVN0Q2RLNjhzZStsR3VYNVNHK25JUnN6SmIwTw==
---
# Source: patroni/templates/role-patroni.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: deploy-patroni
  labels:
    app: deploy-patroni
    chart: patroni-0.16.3
    release: deploy
    heritage: Helm
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
  # delete is required only for 'patronictl remove'
  - delete
- apiGroups: [""]
  resources: ["services"]
  verbs:
  - create
- apiGroups: [""]
  resources: ["endpoints"]
  verbs:
  - create
  - get
  - patch
  - update
  # the following three privileges are necessary only when using endpoints
  - list
  - watch
  # delete is required only for for 'patronictl remove'
  - delete
  - deletecollection
- apiGroups: [""]
  resources: ["pods"]
  verbs:
  - get
  - list
  - patch
  - update
  - watch
---
# Source: patroni/templates/rolebinding-patroni.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: deploy-patroni
  labels:
    app: deploy-patroni
    chart: patroni-0.16.3
    release: deploy
    heritage: Helm
subjects:
  - kind: ServiceAccount
    name: deploy-patroni
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: deploy-patroni
---
# Source: patroni/templates/svc-patroni.yaml
apiVersion: v1
kind: Service
metadata:
  name: deploy-patroni
  labels:
    app: deploy-patroni
    chart: patroni-0.16.3
    release: deploy
    heritage: Helm
spec:
  type: ClusterIP
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
    protocol: TCP
---
# Source: patroni/templates/statefulset-patroni.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: deploy-patroni
  labels:
    app: deploy-patroni
    chart: patroni-0.16.3
    release: deploy
    heritage: Helm
spec:
  serviceName: deploy-patroni
  replicas: 4
  selector:
    matchLabels:
      app: deploy-patroni
      release: deploy
  template:
    metadata:
      name: deploy-patroni
      labels:
        app: deploy-patroni
        release: deploy
    spec:
      serviceAccountName: deploy-patroni
      containers:
      - name: patroni
        image: "registry.opensource.zalan.do/acid/spilo-10:1.5-p5"
        imagePullPolicy: IfNotPresent
        env:
        - name: PGPASSWORD_SUPERUSER
          valueFrom:
            secretKeyRef:
              name: deploy-patroni
              key: password-superuser
        - name: PGPASSWORD_ADMIN
          valueFrom:
            secretKeyRef:
              name: deploy-patroni
              key: password-admin
        - name: PGPASSWORD_STANDBY
          valueFrom:
            secretKeyRef:
              name: deploy-patroni
              key: password-standby
        - name: WAL_S3_BUCKET
          value: "spilo-backup"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: deploy-patroni
              key: aws_access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: deploy-patroni
              key: aws_secret_access_key
        # - name: AWS_ACCESS_KEY_ID
        #   value: AKIA2HYSIHNEMKVO3BXP
        # - name: AWS_SECRET_ACCESS_KEY
        #   value: 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
        
        - name: DCS_ENABLE_KUBERNETES_API
          value: "true"
        - name: KUBERNETES_LABELS
          value: "{ \"app\": \"deploy-patroni\", \"release\": \"deploy\" }"
        - name: KUBERNETES_SCOPE_LABEL
          value: "app"
        - name: SCOPE
          value: deploy-patroni
        - name: USE_WALE
          value: "true"
        - name: BACKUP_SCHEDULE
          value: "00 01 * * *"
        - name: BACKUP_NUM_TO_RETAIN
          value: "2"
        - name: WALE_BACKUP_THRESHOLD_MEGABYTES
          value: "1024"
        - name: WALE_BACKUP_THRESHOLD_PERCENTAGE
          value: "30"
        - name: PGROOT
          value: "/home/postgres/pgdata/pgroot"
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        ports:
        - containerPort: 8008
        - containerPort: 5432
        volumeMounts:
        - name: storage-volume
          mountPath: "/home/postgres/pgdata"
          subPath: ""
        - mountPath: /etc/patroni
          name: patroni-config
          readOnly: true
        #
        #
        # - name: patroni-s3-secret
        #   mountPath: /etc/credentials
        #   readOnly: true
        #
        #
        resources:
          {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app:  patroni
                  release: "deploy"
        
      volumes:
      - name: patroni-config
        secret:
          secretName: deploy-patroni
      - name: patroni-s3-secret
        secret:
          secretName: patroni-s3-secret
  volumeClaimTemplates:
    - metadata:
        name: storage-volume
        annotations:
        labels:
          app: deploy-patroni
          release: deploy
          heritage: Helm
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: "5G"
        storageClassName: "gp2"
---
# Source: patroni/templates/ep-patroni.yaml
apiVersion: v1
kind: Endpoints
metadata:
  name: deploy-patroni
  labels:
    app: deploy-patroni
    chart: patroni-0.16.3
    release: deploy
    heritage: Helm
subsets: []
